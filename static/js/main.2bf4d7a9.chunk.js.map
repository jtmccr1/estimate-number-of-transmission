{"version":3,"sources":["components/Sliderselector.js","components/Selectors.js","utils/commonFunctions.js","components/mutationsOverTime.js","components/daysForMutations.js","components/probabilityOfTransmission.js","components/numberOfTransmissions.js","components/numberOfTransmissionsGivenMutations.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Sliderselector","props","label","type","min","max","step","name","value","onChange","e","updater","stateKey","index","className","Selectors","options","map","x","i","key","mutationOptions","numberOfMutations","dayOptions","numberOfDays","distributionOptions","distributionSliders","LogNormal","distributionParameters","Gamma","distributionSelection","mutationDayOptions","selectedOption","evolutionaryRate","genomeLength","pdfFunctions","jStat","pdf","cdfFunctions","cdf","numericalIntegration","f","range","steps","dx","Math","abs","area","x0","x1","getData","curriedF","xStep","minP","initial","data","needSomeDensity","el","q","p","push","d3","d","length","drawAxis","svgGroup","xScale","yScale","size","margins","xlab","ylab","xAxis","scale","ticks","yAxis","append","attr","top","bottom","call","style","text","left","MutationsPlot","drawPlot","bind","this","CurriedprobabilityOfNumberOfChanges","R","days","ratePerSitePerYear","mutations","averageChangesInDays","probabilityOfNumberOfChanges","width","height","node","svg","margin","right","padding","domain","selectAll","remove","select","enter","bandwidth","ref","React","Component","DayPlot","curriedGamma","averageChangesPerDay","waitingGamma","filter","makeLinePath","y","datum","ProbabilityOfTransmission","curriedPdf","params","isFinite","y0","y1","fixOn","NumberOfTransmissions","waitingCdf","transmissions","curriedCdf","pOnly","sort","a","b","moreTransmission","NumberOfTransmissionsGivenMutations","combinedPdf","pop","App","updateOnSelection","state","conditionalOptions","event","numeric","newState","newValue","parseFloat","target","Array","isArray","slice","setState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2bf4d7a9.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/selectors.css';\nconst Sliderselector = props => {\n\treturn (\n\t\t<div>\n\t\t\t<label>{props.label}</label>\n\t\t\t<input\n\t\t\t\ttype={'range'}\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tstep={props.step}\n\t\t\t\tname={props.name}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={e => props.updater(props.stateKey, props.index, e)}\n\t\t\t\tclassName=\"sliderSelector\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\nexport default Sliderselector;\n","import React from 'react';\nimport Sliderselector from './Sliderselector';\n\nconst Selectors = props => {\n\tconst options = props.options.map((x, i) => (\n\t\t<option value={x} key={i}>\n\t\t\t{x}\n\t\t</option>\n\t));\n\tconst mutationOptions = {\n\t\tmin: 1,\n\t\tmax: 20,\n\t\tstep: 1,\n\t\tname: 'Number of mutations observed',\n\t\tlabel: `Number of mutations : ${props.numberOfMutations}`,\n\t\tvalue: props.numberOfMutations,\n\t\tupdater: props.updater,\n\t\tstateKey: 'numberOfMutations',\n\t\tindex: 0,\n\t};\n\n\tconst dayOptions = {\n\t\tmin: 1,\n\t\tmax: 50,\n\t\tstep: 1,\n\t\tname: 'Number of days between samples',\n\t\tlabel: `Number of days: ${props.numberOfDays}`,\n\t\tvalue: props.numberOfDays,\n\t\tupdater: props.updater,\n\t\tstateKey: 'numberOfDays',\n\t\tindex: 0,\n\t};\n\n\tconst distributionOptions = props.distributionOptions.map((x, i) => (\n\t\t<option value={x} key={i}>\n\t\t\t{x}\n\t\t</option>\n\t));\n\n\tconst distributionSlidersOptions = {\n\t\tLogNormal: [\n\t\t\t{\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 5,\n\t\t\t\tstep: 0.1,\n\t\t\t\tname: 'mu',\n\t\t\t\tlabel: `mu: ${props.distributionParameters[0]}`,\n\t\t\t\tvalue: props.distributionParameters[0],\n\t\t\t\tupdater: props.updater,\n\t\t\t\tstateKey: 'distributionParameters',\n\t\t\t\tindex: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 3,\n\t\t\t\tstep: 0.1,\n\t\t\t\tname: 'sigma',\n\t\t\t\tlabel: `sigma: ${props.distributionParameters[1]}`,\n\t\t\t\tvalue: props.distributionParameters[1],\n\t\t\t\tupdater: props.updater,\n\t\t\t\tstateKey: 'distributionParameters',\n\t\t\t\tindex: 1,\n\t\t\t},\n\t\t],\n\t\tGamma: [\n\t\t\t{\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.1,\n\t\t\t\tname: 'shape1',\n\t\t\t\tlabel: `shape1: ${props.distributionParameters[0]}`,\n\t\t\t\tvalue: props.distributionParameters[0],\n\t\t\t\tupdater: props.updater,\n\t\t\t\tstateKey: 'distributionParameters',\n\t\t\t\tindex: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.1,\n\t\t\t\tname: 'scale',\n\t\t\t\tlabel: `scale: ${props.distributionParameters[1]}`,\n\t\t\t\tvalue: props.distributionParameters[1],\n\t\t\t\tupdater: props.updater,\n\t\t\t\tstateKey: 'distributionParameters',\n\t\t\t\tindex: 1,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst distributionSliders = distributionSlidersOptions[props.distributionSelection].map((x, i) => (\n\t\t<Sliderselector {...x} key={i} />\n\t));\n\n\tconst mutationDayOptions = props.selectedOption === 'Number of Mutations' ? mutationOptions : dayOptions;\n\treturn (\n\t\t<div>\n\t\t\t<Sliderselector\n\t\t\t\tmin={0.0005}\n\t\t\t\tmax={0.005}\n\t\t\t\tstep={0.00001}\n\t\t\t\tname={'Evoluonary Rate'}\n\t\t\t\tlabel={`Rate of Evolution: ${props.evolutionaryRate} subsitutions/site/year`}\n\t\t\t\tvalue={props.evolutionaryRate}\n\t\t\t\tupdater={props.updater}\n\t\t\t\tstateKey={'evolutionaryRate'}\n\t\t\t\tindex={0}\n\t\t\t/>\n\t\t\t<Sliderselector\n\t\t\t\tmin={10000}\n\t\t\t\tmax={30000}\n\t\t\t\tstep={50}\n\t\t\t\tname={'Genome Length'}\n\t\t\t\tlabel={`Genome Length: ${props.genomeLength / 1000} Kb`}\n\t\t\t\tvalue={props.genomeLength}\n\t\t\t\tupdater={props.updater}\n\t\t\t\tstateKey={'genomeLength'}\n\t\t\t\tindex={0}\n\t\t\t/>\n\t\t\t<label>Condition on</label>\n\t\t\t<select value={props.selectedOption} onChange={e => props.updater('selectedOption', 0, e, false)}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t\t<Sliderselector {...mutationDayOptions} />\n\t\t\t<label>Probability of transmission overtime</label>\n\n\t\t\t<select\n\t\t\t\tvalue={props.distributionSelection}\n\t\t\t\tonChange={e => props.updater('distributionSelection', 0, e, false)}\n\t\t\t>\n\t\t\t\t{distributionOptions}\n\t\t\t</select>\n\t\t\t<div>{distributionSliders}</div>\n\t\t</div>\n\t);\n};\nexport default Selectors;\n","import * as jStat from 'jStat';\nimport * as d3 from 'd3';\n\nexport const pdfFunctions = {\n\tLogNormal: jStat.lognormal.pdf,\n\tGamma: jStat.gamma.pdf,\n};\nexport const cdfFunctions = {\n\tLogNormal: jStat.lognormal.cdf,\n\tGamma: jStat.gamma.cdf,\n};\n\n//http://montessorimuddle.org/2013/04/20/programming-numerical-integration-with-python/\nexport const numericalIntegration = (f, range, steps) => {\n\tconst dx = Math.abs(range[0] - range[1]) / steps;\n\tlet area = 0;\n\tfor (let i = 0; i <= steps; i++) {\n\t\tconst x0 = range[0] + i * dx;\n\t\tconst x1 = range[0] + i * dx;\n\t\tconst newArea = (dx * (f(x0) + f(x1))) / 2;\n\t\tarea = area + newArea;\n\t}\n\treturn area;\n};\n\n// from http://bl.ocks.org/mbostock/4349187 from https://github.com/rambaut/Probability-of-Difference/blob/gh-pages/index.html\n// Sample from a normal distribution with mean 0, stddev 1.\nexport const getData = (curriedF, xStep = 1, minP = 0.001, initial = 0) => {\n\tlet data = [];\n\tlet i = initial;\n\tlet needSomeDensity = true;\n\tdo {\n\t\tconst el = {\n\t\t\tq: i,\n\t\t\tp: curriedF(i),\n\t\t};\n\t\tdata.push(el);\n\t\ti = i + xStep;\n\t\tneedSomeDensity = d3.max(data, d => d.p) < minP ? true : false; // So we don't stop too soon\n\t} while (data[data.length - 1].p > minP || needSomeDensity);\n\treturn data;\n};\n\nexport const drawAxis = (svgGroup, xScale, yScale, size, margins, xlab, ylab) => {\n\t//Make axis\n\tconst xAxis = d3\n\t\t.axisBottom()\n\t\t.scale(xScale)\n\t\t.ticks(10);\n\tconst yAxis = d3\n\t\t.axisLeft()\n\t\t.scale(yScale)\n\t\t.ticks(5);\n\t// draw Axis\n\tsvgGroup\n\t\t.append('g')\n\t\t.attr('class', 'x axis')\n\t\t.attr('transform', `translate(0,${size[1] - margins.top - margins.bottom} )`)\n\t\t.call(xAxis);\n\t// Add the text label for the x axis\n\tsvgGroup\n\t\t.append('text')\n\t\t.attr('transform', `translate(${size[0] / 2},${size[1] - margins.top - margins.bottom + 30})`)\n\t\t.style('text-anchor', 'middle')\n\t\t.text(xlab);\n\tsvgGroup\n\t\t.append('g')\n\t\t.attr('class', 'y axis')\n\t\t.attr('transform', `translate(${margins.left},0)`)\n\t\t.call(yAxis);\n\t// Add the text label for the Y axis\n\tsvgGroup\n\t\t.append('text')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('y', margins.left - 45)\n\t\t.attr('x', 0 - size[1] / 2)\n\t\t.attr('dy', '1em')\n\t\t.style('text-anchor', 'middle')\n\t\t.text(ylab);\n};\n","import React from 'react';\nimport * as d3 from 'd3';\nimport * as R from 'ramda';\nimport * as jStat from 'jStat';\nimport { getData, drawAxis } from '../utils/commonFunctions';\n\nclass MutationsPlot extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawPlot = this.drawPlot.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawPlot();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.drawPlot();\n\t}\n\n\tdrawPlot() {\n\t\t//Helper functions\n\n\t\t// from http://bl.ocks.org/mbostock/4349187 from https://github.com/rambaut/Probability-of-Difference/blob/gh-pages/index.html\n\t\t// Sample from a normal distribution with mean 0, stddev 1.\n\t\tconst probabilityOfNumberOfChanges = R.curry(function(days, genomeLength, ratePerSitePerYear, mutations) {\n\t\t\tconst averageChangesPerYear = ratePerSitePerYear * genomeLength;\n\t\t\tconst averageChangesPerDay = averageChangesPerYear / 365;\n\t\t\tconst averageChangesInDays = averageChangesPerDay * days;\n\t\t\tconst prob = jStat.poisson.pdf(mutations, averageChangesInDays);\n\t\t\treturn prob;\n\t\t});\n\t\tconst CurriedprobabilityOfNumberOfChanges = probabilityOfNumberOfChanges(\n\t\t\tthis.props.numberOfDays,\n\t\t\tthis.props.genomeLength,\n\t\t\tthis.props.evolutionaryRate\n\t\t);\n\t\t// draw the plot\n\t\tconst width = this.props.size[0];\n\t\tconst height = this.props.size[1];\n\t\tconst node = this.node;\n\n\t\tconst svg = d3.select(node).style('font', '10px sans-serif');\n\n\t\tconst data = getData(CurriedprobabilityOfNumberOfChanges);\n\n\t\tconst xScale = d3\n\t\t\t.scaleBand()\n\t\t\t.range([this.props.margin.left, width - this.props.margin.left - this.props.margin.right])\n\t\t\t.padding(0.1)\n\t\t\t.domain(\n\t\t\t\tdata.map(function(d) {\n\t\t\t\t\treturn d.q;\n\t\t\t\t})\n\t\t\t);\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([height - this.props.margin.top - this.props.margin.bottom, this.props.margin.bottom])\n\t\t\t.domain([0, 1]);\n\n\t\t//remove current plot\n\t\tsvg.selectAll('g').remove();\n\t\t// do the drawing\n\t\tsvg.append('g').attr('transform', `translate(${this.props.margin.left},${this.props.margin.top})`);\n\n\t\tconst svgGroup = svg.select('g');\n\n\t\tdrawAxis(svgGroup, xScale, yScale, this.props.size, this.props.margin, 'Number of Mutations', 'Probability');\n\t\t// Add data\n\t\tsvgGroup\n\t\t\t.selectAll('rect')\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append('rect')\n\t\t\t.attr('class', 'prob-rect')\n\t\t\t.attr('x', d => xScale(d.q))\n\t\t\t.attr('width', xScale.bandwidth())\n\t\t\t.attr('y', d => yScale(d.p))\n\t\t\t.attr('height', d => height - this.props.margin.bottom - this.props.margin.top - yScale(d.p));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{`The number of expected mutations in ${this.props.numberOfDays} day(s)`}</div>\n\t\t\t\t<svg ref={node => (this.node = node)} width={this.props.size[0]} height={this.props.size[1]} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MutationsPlot;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport * as R from 'ramda';\nimport * as jStat from 'jStat';\nimport { drawAxis, getData } from '../utils/commonFunctions';\n\nclass DayPlot extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawPlot = this.drawPlot.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawPlot();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.drawPlot();\n\t}\n\n\tdrawPlot() {\n\t\t//Helper functions\n\n\t\tconst curriedGamma = R.curry(jStat.gamma.pdf);\n\t\tconst averageChangesPerYear = this.props.evolutionaryRate * this.props.genomeLength;\n\t\tconst averageChangesPerDay = averageChangesPerYear / 365;\n\n\t\tconst waitingGamma = curriedGamma(R.__, this.props.numberOfMutations, 1 / averageChangesPerDay);\n\n\t\t// adjusting the step makes the page respond more quickly but the line gets chunky\n\t\tconst data = getData(waitingGamma, 1.5);\n\t\t// popuate data\n\t\t// draw the plot\n\n\t\tconst width = this.props.size[0];\n\t\tconst height = this.props.size[1];\n\t\tconst node = this.node;\n\t\tconst svg = d3.select(node).style('font', '10px sans-serif');\n\t\t// line chart based on http://bl.ocks.org/mbostock/3883245\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([this.props.margin.left, width - this.props.margin.left - this.props.margin.right])\n\t\t\t.domain([0, d3.max(data.filter(d => d.p > 0.001), d => d.q)]);\n\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([height - this.props.margin.top - this.props.margin.bottom, this.props.margin.bottom])\n\t\t\t.domain([0, d3.max(data, d => d.p)]);\n\n\t\tconst makeLinePath = d3\n\t\t\t.line()\n\t\t\t.x(d => xScale(d.q))\n\t\t\t.y(d => yScale(d.p));\n\n\t\t//remove current plot\n\t\tsvg.selectAll('g').remove();\n\t\t// do the drawing\n\t\tsvg.append('g').attr('transform', `translate(${this.props.margin.left},${this.props.margin.top})`);\n\n\t\tconst svgGroup = svg.select('g');\n\n\t\tdrawAxis(\n\t\t\tsvgGroup,\n\t\t\txScale,\n\t\t\tyScale,\n\t\t\tthis.props.size,\n\t\t\tthis.props.margin,\n\t\t\t'Number of days between sampling',\n\t\t\t'Probability density'\n\t\t);\n\t\t// add data\n\t\tsvgGroup\n\t\t\t.append('path')\n\t\t\t.datum(data)\n\t\t\t.attr('class', 'line')\n\t\t\t.attr('d', makeLinePath);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{`The distribution of days given ${this.props.numberOfMutations} mutation(s)`}</div>\n\t\t\t\t<svg ref={node => (this.node = node)} width={this.props.size[0]} height={this.props.size[1]} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DayPlot;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport * as R from 'ramda';\nimport { getData, drawAxis } from '../utils/commonFunctions';\n\nclass ProbabilityOfTransmission extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawPlot = this.drawPlot.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawPlot();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.drawPlot();\n\t}\n\n\tdrawPlot() {\n\t\t//Helper functions\n\n\t\tconst curriedPdf = R.curry(this.props.pdf);\n\t\t// draw the plot\n\t\tconst width = this.props.size[0];\n\t\tconst height = this.props.size[1];\n\t\tconst node = this.node;\n\n\t\tconst svg = d3.select(node).style('font', '10px sans-serif');\n\n\t\tconst data = getData(curriedPdf(R.__, ...this.props.params), 0.01).filter(d => isFinite(d.p));\n\t\t// popuate data\n\t\t// line chart based on http://bl.ocks.org/mbostock/3883245\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([this.props.margin.left, width - this.props.margin.left - this.props.margin.right])\n\t\t\t.domain([0, d3.max(data, d => d.q)]);\n\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([height - this.props.margin.top - this.props.margin.bottom, this.props.margin.bottom])\n\t\t\t.domain([0, d3.max(data, d => d.p)]);\n\n\t\tconst makeLinePath = d3\n\t\t\t.line()\n\t\t\t.x(d => xScale(d.q))\n\t\t\t.y(d => yScale(d.p));\n\n\t\tconst area = d3\n\t\t\t.area()\n\t\t\t.x(d => xScale(d.q))\n\t\t\t.y0(height - this.props.margin.bottom - this.props.margin.top)\n\t\t\t.y1(d => yScale(d.p));\n\n\t\t//remove current plot\n\t\tsvg.selectAll('g').remove();\n\t\t// do the drawing\n\t\tsvg.append('g').attr('transform', `translate(${this.props.margin.left},${this.props.margin.top})`);\n\n\t\tconst svgGroup = svg.select('g');\n\n\t\tdrawAxis(\n\t\t\tsvgGroup,\n\t\t\txScale,\n\t\t\tyScale,\n\t\t\tthis.props.size,\n\t\t\tthis.props.margin,\n\t\t\t'Days post infection onset',\n\t\t\t'Probability density'\n\t\t);\n\t\tif (this.props.fixOn === 'Number of Days') {\n\t\t\tsvgGroup\n\t\t\t\t.append('path')\n\t\t\t\t.datum(data.filter(d => d.q <= this.props.numberOfDays))\n\t\t\t\t.attr('class', 'area')\n\t\t\t\t.attr('d', area);\n\t\t}\n\t\tsvgGroup\n\t\t\t.append('path')\n\t\t\t.datum(data)\n\t\t\t.attr('class', 'line')\n\t\t\t.attr('d', makeLinePath);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{`The probability of transmission over time (serial interval)`}</div>\n\t\t\t\t<svg ref={node => (this.node = node)} width={this.props.size[0]} height={this.props.size[1]} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProbabilityOfTransmission;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport * as R from 'ramda';\nimport { getData, drawAxis } from '../utils/commonFunctions';\n\nclass NumberOfTransmissions extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawPlot = this.drawPlot.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawPlot();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.drawPlot();\n\t}\n\n\tdrawPlot() {\n\t\t//Helper functions\n\t\t// The sum of 2 gamma distributions with the same rate parameter is a gamma distribution with shape a1+a2\n\n\t\tconst curriedCdf = R.curry(function(cdf, params, numberOfDays, transmissions) {\n\t\t\treturn cdf(numberOfDays, transmissions * params[0], params[1]);\n\t\t});\n\t\tconst waitingCdf = curriedCdf(this.props.cdf, this.props.params, this.props.numberOfDays);\n\t\tlet data = getData(waitingCdf, 1, 0.001, 1); //.filter(d => d.q > 0); // we need to set the 0 point as 1-cdf of at least 1;\n\t\tdata.push({\n\t\t\tq: 0,\n\t\t\tp: 1 - this.props.cdf(this.props.numberOfDays, this.props.params[0], this.props.params[1]),\n\t\t\tpOnly: 1 - this.props.cdf(this.props.numberOfDays, this.props.params[0], this.props.params[1]),\n\t\t});\n\t\tdata.sort((a, b) => a.q - b.q);\n\t\t// Now we want probablity of only that many transmission events no at least this many\n\n\t\tlet moreTransmission = 0;\n\t\tfor (let i = data.length - 1; i >= 1; --i) {\n\t\t\t// The last one is fine (to approximation) as is the first one\n\t\t\tdata[i].pOnly = data[i].p - moreTransmission;\n\t\t\tmoreTransmission = moreTransmission + data[i].pOnly;\n\t\t}\n\n\t\t// draw the plot\n\t\tconst width = this.props.size[0];\n\t\tconst height = this.props.size[1];\n\t\tconst node = this.node;\n\n\t\tconst svg = d3.select(node).style('font', '10px sans-serif');\n\t\tconst xScale = d3\n\t\t\t.scaleBand()\n\t\t\t.range([this.props.margin.left, width - this.props.margin.left - this.props.margin.right])\n\t\t\t.padding(0.1)\n\t\t\t.domain(\n\t\t\t\tdata.map(function(d) {\n\t\t\t\t\treturn d.q;\n\t\t\t\t})\n\t\t\t);\n\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([height - this.props.margin.top - this.props.margin.bottom, this.props.margin.bottom])\n\t\t\t.domain([0, 1]); // d3.max(data, d => d.p)]);\n\n\t\t//remove current plot\n\t\tsvg.selectAll('g').remove();\n\t\t// do the drawing\n\t\tsvg.append('g').attr('transform', `translate(${this.props.margin.left},${this.props.margin.top})`);\n\n\t\tconst svgGroup = svg.select('g');\n\n\t\tdrawAxis(\n\t\t\tsvgGroup,\n\t\t\txScale,\n\t\t\tyScale,\n\t\t\tthis.props.size,\n\t\t\tthis.props.margin,\n\t\t\t'Number of transmission events',\n\t\t\t'Probability'\n\t\t);\n\n\t\tsvgGroup\n\t\t\t.selectAll('rect')\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append('rect')\n\t\t\t.attr('class', 'prob-rect')\n\t\t\t.attr('x', d => xScale(d.q))\n\t\t\t.attr('width', xScale.bandwidth())\n\t\t\t.attr('y', d => yScale(d.pOnly))\n\t\t\t.attr('height', d => height - this.props.margin.bottom - this.props.margin.top - yScale(d.pOnly));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{`The number of transmission events expected in ${this.props.numberOfDays} days`}</div>\n\t\t\t\t<svg ref={node => (this.node = node)} width={this.props.size[0]} height={this.props.size[1]} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NumberOfTransmissions;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { getData, numericalIntegration, drawAxis } from '../utils/commonFunctions';\nimport * as jStat from 'jStat';\nimport * as R from 'ramda';\n\nclass NumberOfTransmissionsGivenMutations extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawPlot = this.drawPlot.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawPlot();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.drawPlot();\n\t}\n\n\tdrawPlot() {\n\t\t//Helper functions\n\t\t// The sum of 2 gamma distributions with the same rate parameter is a gamma distribution with shape a1+a2\n\n\t\tconst averageChangesPerYear = this.props.evolutionaryRate * this.props.genomeLength;\n\t\tconst averageChangesPerDay = averageChangesPerYear / 365;\n\t\t// probability time\n\t\tconst curriedGamma = R.curry(jStat.gamma.pdf);\n\t\tconst waitingGamma = curriedGamma(R.__, this.props.numberOfMutations, 1 / averageChangesPerDay);\n\n\t\t// probability of number of transmission given time\n\t\tconst curriedCdf = R.curry(jStat.gamma.cdf);\n\t\tconst combinedProb = (i, params = this.props.params) => {\n\t\t\tconst waitingCdf = curriedCdf(R.__, i * params[0], params[1]);\n\t\t\tconst combinedPdf = x => {\n\t\t\t\treturn waitingCdf(x) * waitingGamma(x);\n\t\t\t};\n\t\t\treturn numericalIntegration(combinedPdf, [0, 500], 1000);\n\t\t};\n\n\t\tconst data = getData(combinedProb, 1, 0.001, 1);\n\n\t\tdata.push({\n\t\t\tq: 0,\n\t\t\tp: 1 - data[1].p,\n\t\t\tpOnly: 1 - data[1].p,\n\t\t});\n\t\tdata.sort((a, b) => a.q - b.q);\n\t\t// Now fix so its the probably of exactly 1 or 2 ect.\n\t\tlet moreTransmission = 0;\n\t\tfor (let i = data.length - 1; i >= 1; --i) {\n\t\t\t// The last one is fine (to approximation) as is the first one\n\t\t\tdata[i].pOnly = data[i].p - moreTransmission;\n\t\t\tmoreTransmission = moreTransmission + data[i].pOnly;\n\t\t}\n\t\tdata.pop(); // the last point is overestimated anyway\n\n\t\t// draw the plot\n\t\tconst width = this.props.size[0];\n\t\tconst height = this.props.size[1];\n\t\tconst node = this.node;\n\n\t\tconst svg = d3.select(node).style('font', '10px sans-serif');\n\n\t\t// line chart based on http://bl.ocks.org/mbostock/3883245\n\n\t\tconst xScale = d3\n\t\t\t.scaleBand()\n\t\t\t.range([this.props.margin.left, width - this.props.margin.left - this.props.margin.right])\n\t\t\t.padding(0.1)\n\t\t\t.domain(\n\t\t\t\tdata.map(function(d) {\n\t\t\t\t\treturn d.q;\n\t\t\t\t})\n\t\t\t);\n\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.range([height - this.props.margin.top - this.props.margin.bottom, this.props.margin.bottom])\n\t\t\t.domain([0, d3.max(data, d => d.pOnly)]);\n\n\t\t//remove current plot\n\t\tsvg.selectAll('g').remove();\n\t\t// do the drawing\n\t\tsvg.append('g').attr('transform', `translate(${this.props.margin.left},${this.props.margin.top})`);\n\n\t\tconst svgGroup = svg.select('g');\n\n\t\tsvgGroup\n\t\t\t.selectAll('rect')\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append('rect')\n\t\t\t.attr('class', 'prob-rect')\n\t\t\t.attr('x', d => xScale(d.q))\n\t\t\t.attr('width', xScale.bandwidth())\n\t\t\t.attr('y', d => yScale(d.pOnly))\n\t\t\t.attr('height', d => height - this.props.margin.bottom - this.props.margin.top - yScale(d.pOnly));\n\n\t\tdrawAxis(\n\t\t\tsvgGroup,\n\t\t\txScale,\n\t\t\tyScale,\n\t\t\tthis.props.size,\n\t\t\tthis.props.margin,\n\t\t\t'Number of transmission events',\n\t\t\t'Probability'\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{`The number of transmission events expected given ${\n\t\t\t\t\tthis.props.numberOfMutations\n\t\t\t\t} mutations`}</div>\n\t\t\t\t<svg ref={node => (this.node = node)} width={this.props.size[0]} height={this.props.size[1]} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NumberOfTransmissionsGivenMutations;\n","import React, { Component } from 'react';\nimport Selectors from './Selectors';\nimport MutationsPlot from './mutationsOverTime';\nimport DayPlot from './daysForMutations';\nimport ProbabilityOfTransmission from './probabilityOfTransmission';\nimport NumberOfTransmissions from './numberOfTransmissions';\nimport NumberOfTransmissionsGivenMutations from './numberOfTransmissionsGivenMutations';\nimport { pdfFunctions, cdfFunctions } from '../utils/commonFunctions';\nimport '../style/App.css';\nimport '../style/plots.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.updateOnSelection = this.updateOnSelection.bind(this);\n\t\tthis.state = {\n\t\t\tevolutionaryRate: 0.001,\n\t\t\tgenomeLength: 13000,\n\t\t\tconditionalOptions: ['Number of Mutations', 'Number of Days'],\n\t\t\tselectedOption: 'Number of Mutations',\n\t\t\tnumberOfMutations: 1,\n\t\t\tnumberOfDays: 1,\n\t\t\tdistributionOptions: ['Gamma'], //'LogNormal'],\n\t\t\tdistributionSelection: 'Gamma',\n\t\t\tdistributionParameters: [1.5, 3],\n\t\t};\n\t}\n\tupdateOnSelection(key, index, event, numeric = true) {\n\t\tlet newState = {};\n\t\tconst newValue = numeric ? parseFloat(event.target.value) : event.target.value;\n\t\tif (Array.isArray(this.state[key])) {\n\t\t\tnewState[key] = this.state[key].slice();\n\t\t\tnewState[key][index] = newValue;\n\t\t} else {\n\t\t\tnewState[key] = newValue;\n\t\t}\n\n\t\tthis.setState(newState);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Selectors\n\t\t\t\t\t\t\tevolutionaryRate={this.state.evolutionaryRate}\n\t\t\t\t\t\t\tupdater={this.updateOnSelection}\n\t\t\t\t\t\t\tgenomeLength={this.state.genomeLength}\n\t\t\t\t\t\t\toptions={this.state.conditionalOptions}\n\t\t\t\t\t\t\tselectedOption={this.state.selectedOption}\n\t\t\t\t\t\t\tnumberOfDays={this.state.numberOfDays}\n\t\t\t\t\t\t\tnumberOfMutations={this.state.numberOfMutations}\n\t\t\t\t\t\t\tdistributionOptions={this.state.distributionOptions}\n\t\t\t\t\t\t\tdistributionSelection={this.state.distributionSelection}\n\t\t\t\t\t\t\tdistributionParameters={this.state.distributionParameters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{this.state.selectedOption === 'Number of Mutations' ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DayPlot\n\t\t\t\t\t\t\t\tsize={[700, 500]}\n\t\t\t\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 50 }}\n\t\t\t\t\t\t\t\tgenomeLength={this.state.genomeLength}\n\t\t\t\t\t\t\t\tevolutionaryRate={this.state.evolutionaryRate}\n\t\t\t\t\t\t\t\tnumberOfMutations={this.state.numberOfMutations}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<MutationsPlot\n\t\t\t\t\t\t\t\tsize={[700, 500]}\n\t\t\t\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 50 }}\n\t\t\t\t\t\t\t\tgenomeLength={this.state.genomeLength}\n\t\t\t\t\t\t\t\tevolutionaryRate={this.state.evolutionaryRate}\n\t\t\t\t\t\t\t\tnumberOfDays={this.state.numberOfDays}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ProbabilityOfTransmission\n\t\t\t\t\t\t\tsize={[700, 500]}\n\t\t\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 50 }}\n\t\t\t\t\t\t\tparams={this.state.distributionParameters}\n\t\t\t\t\t\t\tpdf={pdfFunctions[this.state.distributionSelection]}\n\t\t\t\t\t\t\tnumberOfDays={this.state.numberOfDays}\n\t\t\t\t\t\t\tfixOn={this.state.selectedOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div />\n\t\t\t\t\t{this.state.selectedOption === 'Number of Days' ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberOfTransmissions\n\t\t\t\t\t\t\t\tsize={[700, 500]}\n\t\t\t\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 50 }}\n\t\t\t\t\t\t\t\tparams={this.state.distributionParameters}\n\t\t\t\t\t\t\t\tcdf={cdfFunctions[this.state.distributionSelection]}\n\t\t\t\t\t\t\t\tnumberOfDays={this.state.numberOfDays}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberOfTransmissionsGivenMutations\n\t\t\t\t\t\t\t\tsize={[700, 500]}\n\t\t\t\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 50 }}\n\t\t\t\t\t\t\t\tparams={this.state.distributionParameters}\n\t\t\t\t\t\t\t\tgenomeLength={this.state.genomeLength}\n\t\t\t\t\t\t\t\tevolutionaryRate={this.state.evolutionaryRate}\n\t\t\t\t\t\t\t\tcdf={cdfFunctions[this.state.distributionSelection]}\n\t\t\t\t\t\t\t\tnumberOfMutations={this.state.numberOfMutations}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}